trapuse2$Trap.18    <- gsub('Use:', '', trapuse2$Trap.18)
trapuse2$Trap.20    <- gsub('Use:', '', trapuse2$Trap.20)
kableExtra::kable(trapuse2,
booktabs = TRUE,
longtable = T,
linesep   = "",
format = "latex")   %>%
kableExtra::kable_styling(font_size = 6,
latex_options = "repeat_header",
repeat_header_text = "continued.",
repeat_header_method = "replace") %>%
kableExtra::landscape()  %>%
#row_spec(114:133, color="magenta") %>%
row_spec(0, bold=T) %>%
column_spec(1,width      = "0.3cm") %>%
column_spec(2,width      = "0.3cm") %>%
column_spec(3,width      = "0.3cm") %>%
column_spec(4,width      = "0.3cm") %>%
column_spec(5,width      = "0.3cm") %>%
column_spec(6,width      = "0.3cm") %>%
column_spec(7,width      = "0.3cm") %>%
column_spec(8,width      = "0.3cm") %>%
column_spec(9,width      = "0.3cm") %>%
column_spec(10,width     = "0.3cm") %>%
column_spec(11,width     = "0.4cm") %>%
column_spec(12,width     = "0.4cm") %>%
column_spec(13,width     = "0.4cm") %>%
column_spec(14,width     = "0.4cm") %>%
column_spec(15,width     = "0.4cm") %>%
column_spec(16,width     = "0.4cm") %>%
column_spec(17,width     = "0.4cm") %>%
column_spec(18,width     = "0.4cm") %>%
column_spec(19,width     = "0.4cm") %>%
column_spec(20,width     = "0.4cm") %>%
column_spec(21,width     = "0.4cm") %>%
column_spec(22,width     = "0.4cm") %>%
column_spec(23,width     = "0.4cm") %>%
column_spec(24,width     = "0.4cm") %>%
column_spec(25,width     = "0.4cm") %>%
column_spec(26,width     = "0.4cm") %>%
column_spec(27,width     = "0.4cm") %>%
column_spec(28,width     = "0.4cm")
trap       <- paste("dbo.procRReport_Survey_TrapUse ",yr,",1,",setcnt, sep="")
#trapdat    <- GetSQLData(trap,"Sablefish")
#write.table(trapdat, file = paste(path,'appendixD.csv',sep=''),row.names=FALSE,na="",col.names=TRUE,sep=",")
trapdat    <- read.csv(paste(path,'appendixD.csv',sep=''),header=T)
trapuse    <- trapdat[,c(-1)]
trapuse2   <- trapuse[,c(-27,-28)]
options(knitr.kable.NA = '')
trap       <- paste("dbo.procRReport_Survey_TrapUse ",yr,",1,",setcnt, sep="")
trapdat    <- GetSQLData(trap,"Sablefish")
library(knitr)
if (is_latex_output()) {
knitr_figs_dir <- "knitr-figs-pdf/"
knitr_cache_dir <- "knitr-cache-pdf/"
fig_out_type <- "png"
} else {
knitr_figs_dir <- "knitr-figs-docx/"
knitr_cache_dir <- "knitr-cache-docx/"
fig_out_type <- "png"
}
fig_asp <- 0.618
fig_width <- 9
fig_out_width <- "6in"
fig_dpi <- 180
fig_align <- "center"
fig_pos <- "htb"
opts_chunk$set(
collapse = TRUE,
warning = FALSE,
message = FALSE,
comment = "#>",
fig.path = knitr_figs_dir,
cache.path = knitr_cache_dir,
fig.asp = fig_asp,
fig.width = fig_width,
out.width = fig_out_width,
echo = FALSE,
#  autodep = TRUE,
#  cache = TRUE,
cache.comments = FALSE,
dev = fig_out_type,
dpi = fig_dpi,
fig.align = fig_align,
fig.pos = fig_pos
)
options(xtable.comment = FALSE)
options(kableExtra.latex.load_packages = FALSE)
# add other packages here:
library(csasdown)
message("year = ", rmarkdown::metadata$year)
#browser()
yr          <-  2012
inlet.set   <- c(116:135)
explore.set <- c(42,43)
camera.set  <- c(6,7,26)
basepath    <- 'c:/github/surveyreport_2012/figures/'
path        <- 'c:/github/surveyreport_2012/standaloneData/'
library(RODBC)
library(knitr)
library(magick)
library(excelR)
library(gapminder)
library(ggplot2)
library(plyr)
library(dplyr)        # transform and summarize tabular data
library(xtable)       # produces tables
library(kableExtra)   # produces html tables with scrollbars, etc
library(pacman)       # produces numbered tables and figures in order to reference them
#  if (!require("pacman")) install.packages("pacman")
#  pacman::p_load(knitr, captioner, bundesligR, stringr)
#library(bookdown)
library(tableHTML)
library(Rmisc)
#library(cowplot)  # for multiple plots
#  ----   G L O B A L --- F U N C T I O N S ---------------------------------
GetSQLData <- function(strSQL,strDbName) {    # connect to SQL Server
cnn <- odbcDriverConnect(paste("Driver={SQL Server};Server=DFBCV9TWVASP001;",
"Database=", strDbName,";
Trusted_Connection=Yes",
sep=""))
dat <- sqlQuery(cnn, strSQL)
odbcClose(cnn)
return(dat)
}
panLab <- function( x, y, txt, ... ) { # Allows text to be placed at 0<x<1, 0<y<1)
usr <- par( "usr" )
par( usr=c(0,1,0,1) )
text( x, y, txt, ... )
par( usr=usr )
#return( NULL )
}
cleanf <- function(x){                            # function to remove duplicates
oldx <- c(FALSE, x[-1]==x[-length(x)])  # is the value equal to the previous
res <- x
res[oldx] <- NA
return(res)
}
simpleCap <- function(x) {  # add capital first letter to each word
s <- strsplit(x, " ")[[1]]
paste(toupper(substring(s, 1,1)), substring(s, 2),
sep="",
collapse=" ")
}
firstup <- function(x) {   # add capital first letter to first word
substr(x, 1, 1) <- toupper(substr(x, 1, 1))
x
}
format_cells <- function(df, rows ,cols, value = c("italics", "bold", "strikethrough")){
# select the correct markup
map    <- setNames(c("*", "**", "~~"), c("italics", "bold", "strikethrough"))
markup <- map[value]
for (r in rows){
for(c in cols){
df[[c]] <- as.character( df[[c]])  # -- make sure values are not factors
df[r, c] <- paste0(markup, df[r, c], markup)  # -- Update formatting
}
}
return(df)
}
fig_label <- function(text, region="figure", pos="topleft", cex=NULL, ...) {
region <- match.arg(region, c("figure", "plot", "device"))
pos <- match.arg(pos, c("topleft", "top", "topright",
"left", "center", "right",
"bottomleft", "bottom", "bottomright"))
if(region %in% c("figure", "device")) {
ds <- dev.size("in")
# xy coordinates of device corners in user coordinates
x <- grconvertX(c(0, ds[1]), from="in", to="user")
y <- grconvertY(c(0, ds[2]), from="in", to="user")
# fragment of the device we use to plot
if(region == "figure") {
# account for the fragment of the device that
# the figure is using
fig <- par("fig")
dx <- (x[2] - x[1])
dy <- (y[2] - y[1])
x <- x[1] + dx * fig[1:2]
y <- y[1] + dy * fig[3:4]
}
}
# much simpler if in plotting region
if(region == "plot") {
u <- par("usr")
x <- u[1:2]
y <- u[3:4]
}
sw <- strwidth(text, cex=cex) * 60/100
sh <- strheight(text, cex=cex) * 60/100
x1 <- switch(pos,
topleft     =x[1] + sw,
left        =x[1] + sw,
bottomleft  =x[1] + sw,
top         =(x[1] + x[2])/2,
center      =(x[1] + x[2])/2,
bottom      =(x[1] + x[2])/2,
topright    =x[2] - sw,
right       =x[2] - sw,
bottomright =x[2] - sw)
y1 <- switch(pos,
topleft     =y[2] - sh,
top         =y[2] - sh,
topright    =y[2] - sh,
left        =(y[1] + y[2])/2,
center      =(y[1] + y[2])/2,
right       =(y[1] + y[2])/2,
bottomleft  =y[1] + sh,
bottom      =y[1] + sh,
bottomright =y[1] + sh)
old.par <- par(xpd=NA)
on.exit(par(old.par))
text(x1, y1, text, cex=cex, ...)
return(invisible(c(x,y)))
}
inline_hook <- function(x) {  # -- for inline text where numbers are larger
if (is.numeric(x)) {
format(x, digits = 2)
} else x
}
knitr::knit_hooks$set(inline = inline_hook)
options(knitr.kable.NA = '')
trap       <- paste("dbo.procRReport_Survey_TrapUse ",yr,",1,",setcnt, sep="")
trapdat    <- GetSQLData(trap,"Sablefish")
trapdat    <- read.csv(paste(path,'appendixD.csv',sep=''),header=T)
trapdat    <- read.csv(paste(path,'appendixD.csv',sep=''),header=T)
trapuse2    <- trapdat[,c(-1, -28, -29)]
trapuse2$Trap.1     <- gsub('Use:', '', trapuse2$Trap.1)
trapuse2$Trap.11    <- gsub('Use:', '', trapuse2$Trap.11)
trapuse2$Trap.12    <- gsub('Use:', '', trapuse2$Trap.12)
trapuse2$Trap.14    <- gsub('Use:', '', trapuse2$Trap.14)
trapuse2$Trap.15    <- gsub('Use:', '', trapuse2$Trap.15)
trapuse2$Trap.18    <- gsub('Use:', '', trapuse2$Trap.18)
trapuse2$Trap.20    <- gsub('Use:', '', trapuse2$Trap.20)
trapuse2
# Sablefish.dbo.procRReport_Survey_TrapUse procedure pulls
# data from table dbo.GFBIO_TRAPS_USE
# created by procedure Sablefish.dbo.Build_BIO_Sablefish_Tables
options(knitr.kable.NA = '')
trap       <- paste("dbo.procRReport_Survey_TrapUse ",yr,",1,",setcnt, sep="")
#trapdat    <- GetSQLData(trap,"Sablefish")
#write.table(trapdat, file = paste(path,'appendixD.csv',sep=''),row.names=FALSE,na="",col.names=TRUE,sep=",")
trapdat    <- read.csv(paste(path,'appendixD.csv',sep=''),header=T)
trapuse2    <- trapdat[,c(-1, -28, -29)]
trapuse2$Trap.1     <- gsub('Use:', '', trapuse2$Trap.1)
trapuse2$Trap.11    <- gsub('Use:', '', trapuse2$Trap.11)
trapuse2$Trap.12    <- gsub('Use:', '', trapuse2$Trap.12)
trapuse2$Trap.14    <- gsub('Use:', '', trapuse2$Trap.14)
trapuse2$Trap.15    <- gsub('Use:', '', trapuse2$Trap.15)
trapuse2$Trap.18    <- gsub('Use:', '', trapuse2$Trap.18)
trapuse2$Trap.20    <- gsub('Use:', '', trapuse2$Trap.20)
kableExtra::kable(trapuse2,
booktabs = TRUE,
longtable = T,
linesep   = "",
format = "latex")   %>%
kableExtra::kable_styling(font_size = 6,
latex_options = "repeat_header",
repeat_header_text = "continued.",
repeat_header_method = "replace") %>%
kableExtra::landscape()  %>%
#row_spec(114:133, color="magenta") %>%
row_spec(0, bold=T) %>%
column_spec(1,width      = "0.3cm") %>%
column_spec(2,width      = "0.3cm") %>%
column_spec(3,width      = "0.3cm") %>%
column_spec(4,width      = "0.3cm") %>%
column_spec(5,width      = "0.3cm") %>%
column_spec(6,width      = "0.3cm") %>%
column_spec(7,width      = "0.3cm") %>%
column_spec(8,width      = "0.3cm") %>%
column_spec(9,width      = "0.3cm") %>%
column_spec(10,width     = "0.3cm") %>%
column_spec(11,width     = "0.4cm") %>%
column_spec(12,width     = "0.4cm") %>%
column_spec(13,width     = "0.4cm") %>%
column_spec(14,width     = "0.4cm") %>%
column_spec(15,width     = "0.4cm") %>%
column_spec(16,width     = "0.4cm") %>%
column_spec(17,width     = "0.4cm") %>%
column_spec(18,width     = "0.4cm") %>%
column_spec(19,width     = "0.4cm") %>%
column_spec(20,width     = "0.4cm") %>%
column_spec(21,width     = "0.4cm") %>%
column_spec(22,width     = "0.4cm") %>%
column_spec(23,width     = "0.4cm") %>%
column_spec(24,width     = "0.4cm") %>%
column_spec(25,width     = "0.4cm") %>%
column_spec(26,width     = "0.4cm") %>%
column_spec(27,width     = "0.4cm") %>%
column_spec(28,width     = "0.4cm")
library(knitr)
library(dplyr)
library(pander)
library(ggplot2)
trap.count <-paste("select tp.YEAR, fe.TRIP_ID, fe.FE_MAJOR_LEVEL_ID AS SET_ID, fe.FE_SUB_LEVEL_ID AS BECKET, ",
"fe.FE_MINOR_LEVEL_ID AS TRAP, SUM(c.CATCH_COUNT) AS total_count ",
"from dbo.GFBIO_TRAP_VW_VW AS fe INNER JOIN ",
"(select YEAR, TRIP_ID from dbo.SURVEY_trips_vw ",
" group by YEAR, TRIP_ID) AS tp ON fe.TRIP_ID = tp.TRIP_ID LEFT OUTER JOIN ",
" GFBioSQL.dbo.TRAP_SPECS AS ts ON fe.FISHING_EVENT_ID = ts.FISHING_EVENT_ID LEFT OUTER JOIN ",
" (select FISHING_EVENT_ID, SUM(CASE WHEN BAIT_LURE_CODE = 15 AND BAIT_METHOD_CODE = 4  ",
" then TRPBL_BAIT_AMOUNT ELSE NULL END) AS BAGGED_SQUID, SUM(CASE WHEN BAIT_LURE_CODE = 18 and  ",
" BAIT_METHOD_CODE = 6 THEN TRPBL_BAIT_AMOUNT ELSE NULL END) AS LOOSE_HAKE,  ",
" SUM(CASE WHEN (BAIT_LURE_CODE <> 15 AND BAIT_METHOD_CODE <> 4) AND (BAIT_LURE_CODE <> 18 AND  ",
" BAIT_METHOD_CODE <> 6) THEN TRPBL_BAIT_AMOUNT ELSE NULL END) AS OTHER_BAIT ",
" from GFBioSQL.dbo.TRAP_BAIT_LURE ",
" group by FISHING_EVENT_ID) AS bait ON fe.FISHING_EVENT_ID = bait.FISHING_EVENT_ID  ",
" LEFT OUTER JOIN ",
" (select fec.FISHING_EVENT_ID, GFBioSQL.dbo.CATCH.SPECIES_CODE,  ",
" SUM(GFBioSQL.dbo.CATCH.CATCH_WEIGHT) AS CATCH_WEIGHT, SUM(GFBioSQL.dbo.CATCH.CATCH_COUNT) AS CATCH_COUNT,  ",
" AVG(ISNULL(GFBioSQL.dbo.CATCH.CATCH_VERIFICATION_CODE, 0)) AS VERIFICATION_METHOD ",
" from GFBioSQL.dbo.FISHING_EVENT_CATCH AS fec INNER JOIN ",
" GFBioSQL.dbo.CATCH ON fec.CATCH_ID = GFBioSQL.dbo.CATCH.CATCH_ID ",
" where (GFBioSQL.dbo.CATCH.SPECIES_CODE = '455') ",
" GROUP BY fec.FISHING_EVENT_ID, GFBioSQL.dbo.CATCH.SPECIES_CODE) AS c ON fe.FISHING_EVENT_ID = c.FISHING_EVENT_ID ",
" GROUP BY fe.FE_MAJOR_LEVEL_ID, fe.TRIP_ID, tp.YEAR, fe.FE_SUB_LEVEL_ID, fe.FE_MINOR_LEVEL_ID",
" having  (tp.YEAR IN ('",yr,"')) order by SET_ID, BECKET, TRAP",sep="")
#trap.sable1   <- GetSQLData(trap.count,"Sablefish")
#write.table(trap.sable1, file = paste(path,"appendixESetUp.csv",sep=''),row.names=FALSE, na="",col.names=TRUE, sep=",")
trap.sable1  <-  read.csv(paste(path,'appendixESetUp.csv',sep=''), header=T)
library(tidyverse)
library(tidyr)
library(scales)
trap.sable <- trap.sable1[,c(-1,-2,-4)]
#trap.sable$SET_ID <- as.factor(trap.sable$SET_ID)
names(trap.sable) <- c("SurveySet","Trap","Value")
trap.sable[is.na(trap.sable)] <- 0
#  trap.sableTest  <-  trap.sable[trap.sable$SurveySet == 40,]
big.value <- max(trap.sable$Value)
w<-trap.sable %>%
group_by(SurveySet) %>%
do({
p <- ggplot(., aes(x = Trap, y = Value)) +
geom_area( fill="#6495ED", alpha=0.4) +   #6495ED
geom_line(size = 4, color = "blue") +
#geom_point(size=15, color="red") +
ylim(0, big.value) +
xlim(0,25) +
theme_void()
#stat_summary(fun.y = max, colour = "red", geom = "point", size = 5)
#ggsave(p, filename = paste0("fig", unique(.$SurveySet), ".png"), width = 8, height = 2)  # save time comment out
invisible(.)
})
#  Sablefish.dbo.procReport_Survey_SampleDetails pulls data
#  from table GFBIO_RESEARCH_SAMPLE_DETAILS, built by
#  procedure Sablefish.dbo.Build_BIO_Sablefish_Tables
# \renewcommand{\arraystretch}{1} # use above r code to stretch table
samples           <-  paste("dbo.procReport_Survey_SampleDetails ", yr ,",1,",setcnt, sep="")
#surveyspec        <-  GetSQLData(samples,"Sablefish")
#write.table(surveyspec, file = paste(path,'appendixE.csv',sep=''),row.names=FALSE, na="",col.names=TRUE,  sep=",")
surveyspec        <-  read.csv(paste(path,'appendixE.csv',sep=''),header=T)
count.row.total   <-  length(surveyspec$SET)
count.row         <-  length(surveyspec$SET) - 1
surveyspec$SET[count.row.total] <- "Total"
surveyspec[116,1] <- paste("\\color{magenta}{", surveyspec[116,1], "}")
surveyspec <-  surveyspec %>%
mutate(Sparkline = paste0("\\raisebox{.12\\height} {\\includegraphics[width=2cm]{fig",SET,".png}}") )
colnames(surveyspec) <- c("", "kg","Count","Recover-Rerelease", "Deceased", "Released",
"Count", "Mean", "Fork Length", "Sex","Maturity", "Otoliths",
"Weight","Count","Proportion Males", "Males", "Females", "Count by Trap")
surveyspec <-  surveyspec[, c(1, 2, 3, 18, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17)]  #reorder table
colnames(surveyspec) <- c("", "kg","Count","Count by Trap","Recover-Rerelease", "Deceased", "Released",
"Count", "Mean", "Fork Length", "Sex","Maturity", "Otoliths",
"Weight","Count","Proportion Males", "Males", "Females" )
kableExtra::kable(surveyspec,
booktabs = TRUE,
longtable = T,
escape = F,        # lets the image show up
linesep   = "",
align=rep('r', 18),
format = "latex") %>%
add_header_above(c("Set"= 1,
"Total Catch" = 3,
"Tagged Fish Counts" = 3,
"Tagged Fork Lengths(mm)" = 2,
"Specimen Count"= 6,
"Mean Fork Length(mm)" = 3), bold = TRUE) %>%
kableExtra::kable_styling(font_size = 8,
latex_options = "repeat_header",
repeat_header_text = "continued.",
repeat_header_method = "replace") %>%
kableExtra::landscape()  %>%
row_spec(0, bold = T)  %>%
column_spec(1,width    = "0.3cm") %>%  # set
column_spec(2,width    = "0.6cm") %>%  # kg
column_spec(3,width    = "0.7cm") %>%  # count
column_spec(4,width    = "1.4cm") %>%  # sparkline
column_spec(5,width    = "0.9cm") %>%  # rr
column_spec(6,width    = "1.0cm") %>%  # decease
column_spec(7,width    = "0.9cm") %>%  # rel
column_spec(8,width    = "1.5cm") %>%  # count
column_spec(9,width    = "0.9cm") %>%  # mean
column_spec(10,width   = "0.5cm") %>%  # fl
column_spec(11,width   = "0.5cm") %>%  # sex
column_spec(12,width   = "0.7cm") %>%  # mat
column_spec(13,width   = "0.7cm") %>%  # oto
column_spec(14,width   = "0.6cm") %>%  # wt
column_spec(15,width   = "0.6cm") %>%  # cnt
column_spec(16,width   = "1.1cm") %>%  # prop m
column_spec(17,width   = "0.7cm") %>%  # male
column_spec(18,width   = "0.7cm") %>%  # fem
row_spec(count.row.total, bold = T)  %>%
row_spec(count.row,  hline_after = T)
library(knitr)
library(dplyr)
library(pander)
library(ggplot2)
trap.count <-paste("select tp.YEAR, fe.TRIP_ID, fe.FE_MAJOR_LEVEL_ID AS SET_ID, fe.FE_SUB_LEVEL_ID AS BECKET, ",
"fe.FE_MINOR_LEVEL_ID AS TRAP, SUM(c.CATCH_COUNT) AS total_count ",
"from dbo.GFBIO_TRAP_VW_VW AS fe INNER JOIN ",
"(select YEAR, TRIP_ID from dbo.SURVEY_trips_vw ",
" group by YEAR, TRIP_ID) AS tp ON fe.TRIP_ID = tp.TRIP_ID LEFT OUTER JOIN ",
" GFBioSQL.dbo.TRAP_SPECS AS ts ON fe.FISHING_EVENT_ID = ts.FISHING_EVENT_ID LEFT OUTER JOIN ",
" (select FISHING_EVENT_ID, SUM(CASE WHEN BAIT_LURE_CODE = 15 AND BAIT_METHOD_CODE = 4  ",
" then TRPBL_BAIT_AMOUNT ELSE NULL END) AS BAGGED_SQUID, SUM(CASE WHEN BAIT_LURE_CODE = 18 and  ",
" BAIT_METHOD_CODE = 6 THEN TRPBL_BAIT_AMOUNT ELSE NULL END) AS LOOSE_HAKE,  ",
" SUM(CASE WHEN (BAIT_LURE_CODE <> 15 AND BAIT_METHOD_CODE <> 4) AND (BAIT_LURE_CODE <> 18 AND  ",
" BAIT_METHOD_CODE <> 6) THEN TRPBL_BAIT_AMOUNT ELSE NULL END) AS OTHER_BAIT ",
" from GFBioSQL.dbo.TRAP_BAIT_LURE ",
" group by FISHING_EVENT_ID) AS bait ON fe.FISHING_EVENT_ID = bait.FISHING_EVENT_ID  ",
" LEFT OUTER JOIN ",
" (select fec.FISHING_EVENT_ID, GFBioSQL.dbo.CATCH.SPECIES_CODE,  ",
" SUM(GFBioSQL.dbo.CATCH.CATCH_WEIGHT) AS CATCH_WEIGHT, SUM(GFBioSQL.dbo.CATCH.CATCH_COUNT) AS CATCH_COUNT,  ",
" AVG(ISNULL(GFBioSQL.dbo.CATCH.CATCH_VERIFICATION_CODE, 0)) AS VERIFICATION_METHOD ",
" from GFBioSQL.dbo.FISHING_EVENT_CATCH AS fec INNER JOIN ",
" GFBioSQL.dbo.CATCH ON fec.CATCH_ID = GFBioSQL.dbo.CATCH.CATCH_ID ",
" where (GFBioSQL.dbo.CATCH.SPECIES_CODE = '455') ",
" GROUP BY fec.FISHING_EVENT_ID, GFBioSQL.dbo.CATCH.SPECIES_CODE) AS c ON fe.FISHING_EVENT_ID = c.FISHING_EVENT_ID ",
" GROUP BY fe.FE_MAJOR_LEVEL_ID, fe.TRIP_ID, tp.YEAR, fe.FE_SUB_LEVEL_ID, fe.FE_MINOR_LEVEL_ID",
" having  (tp.YEAR IN ('",yr,"')) order by SET_ID, BECKET, TRAP",sep="")
#trap.sable1   <- GetSQLData(trap.count,"Sablefish")
#write.table(trap.sable1, file = paste(path,"appendixESetUp.csv",sep=''),row.names=FALSE, na="",col.names=TRUE, sep=",")
trap.sable1  <-  read.csv(paste(path,'appendixESetUp.csv',sep=''), header=T)
library(tidyverse)
library(tidyr)
library(scales)
trap.sable <- trap.sable1[,c(-1,-2,-4)]
#trap.sable$SET_ID <- as.factor(trap.sable$SET_ID)
names(trap.sable) <- c("SurveySet","Trap","Value")
trap.sable[is.na(trap.sable)] <- 0
#  trap.sableTest  <-  trap.sable[trap.sable$SurveySet == 40,]
big.value <- max(trap.sable$Value)
w<-trap.sable %>%
group_by(SurveySet) %>%
do({
p <- ggplot(., aes(x = Trap, y = Value)) +
geom_area( fill="#6495ED", alpha=0.4) +   #6495ED
geom_line(size = 4, color = "blue") +
#geom_point(size=15, color="red") +
ylim(0, big.value) +
xlim(0,25) +
theme_void()
#stat_summary(fun.y = max, colour = "red", geom = "point", size = 5)
#ggsave(p, filename = paste0("fig", unique(.$SurveySet), ".png"), width = 8, height = 2)  # save time comment out
invisible(.)
})
# Sablefish.dbo.procRReport_Survey_TrapUse procedure pulls
# data from table dbo.GFBIO_TRAPS_USE
# created by procedure Sablefish.dbo.Build_BIO_Sablefish_Tables
options(knitr.kable.NA = '')
trap       <- paste("dbo.procRReport_Survey_TrapUse ",yr,",1,",setcnt, sep="")
#trapdat    <- GetSQLData(trap,"Sablefish")
#write.table(trapdat, file = paste(path,'appendixD.csv',sep=''),row.names=FALSE,na="",col.names=TRUE,sep=",")
trapdat    <- read.csv(paste(path,'appendixD.csv',sep=''),header=T)
trapuse2    <- trapdat[,c(-1, -28, -29)]
trapuse2$Trap.1     <- gsub('Use:', '', trapuse2$Trap.1)
trapuse2$Trap.11    <- gsub('Use:', '', trapuse2$Trap.11)
trapuse2$Trap.12    <- gsub('Use:', '', trapuse2$Trap.12)
trapuse2$Trap.14    <- gsub('Use:', '', trapuse2$Trap.14)
trapuse2$Trap.15    <- gsub('Use:', '', trapuse2$Trap.15)
trapuse2$Trap.18    <- gsub('Use:', '', trapuse2$Trap.18)
trapuse2$Trap.20    <- gsub('Use:', '', trapuse2$Trap.20)
kableExtra::kable(trapuse2,
booktabs = TRUE,
longtable = T,
linesep   = "",
format = "latex")   %>%
kableExtra::kable_styling(font_size = 6,
latex_options = "repeat_header",
repeat_header_text = "continued.",
repeat_header_method = "replace") %>%
kableExtra::landscape()  %>%
#row_spec(114:133, color="magenta") %>%
row_spec(0, bold=T) %>%
column_spec(1,width      = "0.3cm") %>%
column_spec(2,width      = "0.3cm") %>%
column_spec(3,width      = "0.3cm") %>%
column_spec(4,width      = "0.3cm") %>%
column_spec(5,width      = "0.3cm") %>%
column_spec(6,width      = "0.3cm") %>%
column_spec(7,width      = "0.3cm") %>%
column_spec(8,width      = "0.3cm") %>%
column_spec(9,width      = "0.3cm") %>%
column_spec(10,width     = "0.3cm") %>%
column_spec(11,width     = "0.4cm") %>%
column_spec(12,width     = "0.4cm") %>%
column_spec(13,width     = "0.4cm") %>%
column_spec(14,width     = "0.4cm") %>%
column_spec(15,width     = "0.4cm") %>%
column_spec(16,width     = "0.4cm") %>%
column_spec(17,width     = "0.4cm") %>%
column_spec(18,width     = "0.4cm") %>%
column_spec(19,width     = "0.4cm") %>%
column_spec(20,width     = "0.4cm") %>%
column_spec(21,width     = "0.4cm") %>%
column_spec(22,width     = "0.4cm") %>%
column_spec(23,width     = "0.4cm") %>%
column_spec(24,width     = "0.4cm") %>%
column_spec(25,width     = "0.4cm") %>%
column_spec(26,width     = "0.4cm") %>%
column_spec(27,width     = "0.4cm") %>%
column_spec(28,width     = "0.4cm")
